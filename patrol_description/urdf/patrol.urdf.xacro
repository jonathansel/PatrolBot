<?xml version="1.0"?>
<robot name="patrol_robot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Colour Preset -->
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <!-- Wheel Mounting Positions -->
  <xacro:property name="wheelbase" value="0.85" />
  <xacro:property name="track" value="0.585" />
  <xacro:property name="wheel_vertical_offset" value="0" />

  <!-- Wheel Properties - Change this when collision is needed -->
  <xacro:property name="wheel_length" value="0.1143" />
  <xacro:property name="wheel_radius" value="0.24" />

  <!-- Xacro arguments for realsense d435i camera -->
  <xacro:property name="realsense_enabled" value="$(optenv REALSENSE_ENABLE false)"/>
  <xacro:arg name="use_nominal_extrinsics" default="false"/>

  <xacro:include filename="$(find patrol_description)/urdf/patrol_wheel.urdf.xacro" />
  <xacro:include filename="$(find sick_scan_xd)/urdf/sick_scan.urdf.xacro" />
  <xacro:include filename="$(find sick_scan_xd)/urdf/sick_lms1xx.urdf.xacro" />

  <xacro:if value="${realsense_enabled}">
    <xacro:include filename="$(find realsense2_description)/urdf/_d435i.urdf.xacro"/>
  </xacro:if>

  <xacro:sick_tim_5xx name="laser_tim" ros_topic="sick_tim_5xx"/>
  <xacro:sick_lms_1xx name="laser_lms" ros_topic="sick_lms_1xx"/>

  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>

  <!-- Base link is the center of the robot's bottom plate -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${-pi/2}" />
      <geometry>
        <mesh filename="package://patrol_description/meshes/base_link.STL" />
      </geometry>
      <material name="white"/> 
    </visual>
    <collision>
     <origin xyz="0 0 0" rpy="0 0 0"/>
     <geometry>
       <box size="${wheelbase+0.75} ${track} ${0.4}"/>
     </geometry>
    </collision>  
  </link>

  <!-- Drop Z value to ground-->
  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="base_footprint" />
  </joint>

  <!-- Inertial link stores the robot's inertial information - using husky for timebeing -->
  <link name="inertial_link">
    <inertial>
      <mass value="46.034" />
      <origin xyz="-0.00065 -0.085 0.062" />
      <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296" />
    </inertial>
  </link>

  <joint name="inertial_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="inertial_link" />
  </joint>

  <!-- Adjust origin to TiM sensor mount-->
  <joint name="laser_tim_mount_joint" type="fixed">
    <origin xyz="0.75 0 0.2" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="laser_tim_mount_link" />
  </joint>

  <!-- Adjust origin to LMS sensor mount-->
  <joint name="laser_lms_mount_joint" type="fixed">
    <origin xyz="0.55 0 0.5" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="laser_lms_mount_link" />
  </joint>

  <!-- Sick LMS - just using hokuyo noise param for now-->
  <gazebo reference="laser_lms_mount_link">
    <sensor type="ray" name="laser_lms_sensor">
      <pose>0 0 1 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.357</min_angle>
            <max_angle>2.357</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>20.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_laser" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>laser_lms_mount_link</frameName>
        <robotNamespace>/patrol_robot</robotNamespace>
      </plugin>
    </sensor>
  </gazebo>

  <xacro:if value="${realsense_enabled}">
    <xacro:sensor_d435i parent="base_link" name="cam0" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
      <origin xyz="2 0 0" rpy="0 0 0"/>
    </xacro:sensor_d435i>
    <xacro:sensor_d435i parent="base_link" name="cam1" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
      <origin xyz="2 0.2 0" rpy="0 0 ${pi/2}"/>
    </xacro:sensor_d435i>
    <xacro:sensor_d435i parent="base_link" name="cam2" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
      <origin xyz="2 -0.2 0" rpy="0 0 ${-pi/2}"/>
    </xacro:sensor_d435i>
  </xacro:if>

  <!-- Patrol Wheel Macros -->
  <xacro:patrol_wheel wheel_prefix="front_left" steer="true">
    <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:patrol_wheel>
  <xacro:patrol_wheel wheel_prefix="front_right" steer="true">
    <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:patrol_wheel>
  <xacro:patrol_wheel wheel_prefix="rear_left" steer="false">
    <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:patrol_wheel>
  <xacro:patrol_wheel wheel_prefix="rear_right" steer="false">
    <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:patrol_wheel>

  <!-- Legacy mode in husky -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/patrol_robot</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

</robot>